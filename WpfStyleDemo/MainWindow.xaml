
<!--link to tutorial: https://wpf-tutorial.com/styles/introduction/ 
    external style: https://social.msdn.microsoft.com/Forums/vstudio/en-US/e37b528e-f797-4b91-84fe-03ddd7fb57c1/custom-style-in-an-external-file?forum=wpf -->     
    
<Window x:Class="WpfStyleDemo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfStyleDemo"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">

    <!--define explicit styles by using the x:Key attribute-->
    <Window.Resources>
        <Style x:Key="ExplicitStyle" TargetType="TextBlock">
            <Setter Property="Background" Value="Red" />
            <Setter Property="FontStyle" Value="Italic" />
        </Style>
        
        <!--or you can also put the style in an external .xaml file
        and then add it to a ResourceDictionary
        ATTENTION: you must provide the dictionary with a key - otherwise it won't compile
        AND: you must add the same block below in App.xaml inside the App.Resources tag-->
        <ResourceDictionary x:Key="key">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles/ExternalStyleDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="20" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!--define a local style inside a {parentElement}.Resources tag
        this could also be the window tag if you want the style to apply for the entire window
        or the app tag in the App.xaml file for the entire app-->
        <Grid.Resources>
            
            <!--here define a style tag with a TargetType attribute determining which
            tags the style should be applied to within the parent element-->
            <Style TargetType="TextBlock">
                
                <!--define self-closing setter tags with the attribute pair Property - Value,
                determining which of the target type tag's properties should have which values-->
                <Setter Property="FontSize" Value="50" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground" Value="BlueViolet" />
            </Style>
        </Grid.Resources>

        <TextBlock Grid.Row="1" Grid.Column="1" Text="test1" />
        <TextBlock Grid.Row="2" Grid.Column="1" Text="test2" />
        
        <!--of course, inherited styles can be overwritten-->
        <TextBlock Grid.Row="3" Grid.Column="1" Text="test3" Foreground="Black"/>

        <!--apply an explicit style by referencing in the Style attribute like so 
        Style = "{StaticResource [StyleName]}"-->
        <TextBlock Grid.Row="4" Grid.Column="1" Text="test4" Style="{StaticResource ExplicitStyle}"/>
        <TextBlock Grid.Row="5" Grid.Column="1" Text="test5" Style="{StaticResource ExternalStyle}"/>
    </Grid>
</Window>
